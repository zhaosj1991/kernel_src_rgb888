/*
 * ar0521_mode_tbls.h - ar0521 sensor mode tables
 *
 * Copyright (c) 2015-2017, NVIDIA CORPORATION, All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __AR0521_TABLES__
#define __AR0521_TABLES__

#include <media/camera_common.h>

#define AR0521_TABLE_WAIT_MS	0
#define AR0521_TABLE_END	1
#define AR0521_MAX_RETRIES	3
#define AR0521_WAIT_MS		100

#define ar0521_reg struct reg_16

static const ar0521_reg ar0521_start[] = {
	{0x301A, 0x021c}, /* mode select streaming on */
	{AR0521_TABLE_END, 0x00}
};

static const ar0521_reg ar0521_stop[] = {
	{0x301A, 0x0210}, /* mode select streaming on */
	{AR0521_TABLE_END, 0x00}
};

static const ar0521_reg tp_colorbars[] = {
	{0x0600, 0x00},
	{0x0601, 0x02},

	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
	{AR0521_TABLE_END, 0x00}
};

static const ar0521_reg mode_2592x1944[] = {
 	{0x0103, 0x01  }, // Including sw reset
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{0x3042, 0x0004}, // DARK_CONTROL2
 	{0x3044, 0x4580}, // DARK_CONTROL
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3120, 0x0001}, // DITHER_CONTROL
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x30D2, 0x0000}, // CRM_CONTROL
 	{0x30D4, 0x0000}, // COLUMN_CORRECTION
 	{0x30D6, 0x2FFF}, // COLUMN_CORRECTION2
 	{0x30DA, 0x0FFF}, // COLUMN_CORRECTION_CLIP2
 	{0x30DC, 0x0FFF}, // COLUMN_CORRECTION_CLIP3
 	{0x30DE, 0x0000}, // COLUMN_GROUP_CORRECTION
 	{0x31E0, 0x0781}, // PIX_DEF_ID
 	{0x3180, 0x9434}, // FINE_DIG_CORRECTION_CONTROL
 	{0x3172, 0x0206}, // ANALOG_CONTROL2
 	{0x3F00, 0x0017}, // BM_T0
 	{0x3F02, 0x02DD}, // BM_T1
 	{0x3F04, 0x0020}, // NOISE_GAIN_THRESHOLD0
 	{0x3F06, 0x0040}, // NOISE_GAIN_THRESHOLD1
 	{0x3F08, 0x0070}, // NOISE_GAIN_THRESHOLD2
 	{0x3F0A, 0x0101}, // NOISE_FLOOR10
 	{0x3F0C, 0x0302}, // NOISE_FLOOR32
 	{0x3F1E, 0x0022}, // NOISE_COEF
 	{0x3F1A, 0x01FF}, // CROSSFACTOR2
 	{0x3F14, 0x0505}, // SINGLE_K_FACTOR2
 	{0x3F44, 0x0707}, // COUPLE_K_FACTOR2
 	{0x3F18, 0x01FF}, // CROSSFACTOR1
 	{0x3F12, 0x0505}, // SINGLE_K_FACTOR1
 	{0x3F42, 0x1511}, // COUPLE_K_FACTOR1
 	{0x3F16, 0x01FF}, // CROSSFACTOR0
 	{0x3F10, 0x0505}, // SINGLE_K_FACTOR0
 	{0x3F40, 0x1511}, // COUPLE_K_FACTOR0
 	{0x3D00, 0x043E}, // DYNAMIC_SEQRAM_00
 	{0x3D02, 0x4760}, // DYNAMIC_SEQRAM_02
 	{0x3D04, 0xFFFF}, // DYNAMIC_SEQRAM_04
 	{0x3D06, 0xFFFF}, // DYNAMIC_SEQRAM_06
 	{0x3D08, 0x8000}, // DYNAMIC_SEQRAM_08
 	{0x3D0A, 0x0510}, // DYNAMIC_SEQRAM_0A
 	{0x3D0C, 0xAF08}, // DYNAMIC_SEQRAM_0C
 	{0x3D0E, 0x0252}, // DYNAMIC_SEQRAM_0E
 	{0x3D10, 0x486F}, // DYNAMIC_SEQRAM_10
 	{0x3D12, 0x5D5D}, // DYNAMIC_SEQRAM_12
 	{0x3D14, 0x8056}, // DYNAMIC_SEQRAM_14
 	{0x3D16, 0x8313}, // DYNAMIC_SEQRAM_16
 	{0x3D18, 0x0087}, // DYNAMIC_SEQRAM_18
 	{0x3D1A, 0x6A48}, // DYNAMIC_SEQRAM_1A
 	{0x3D1C, 0x6982}, // DYNAMIC_SEQRAM_1C
 	{0x3D1E, 0x0280}, // DYNAMIC_SEQRAM_1E
 	{0x3D20, 0x8359}, // DYNAMIC_SEQRAM_20
 	{0x3D22, 0x8D02}, // DYNAMIC_SEQRAM_22
 	{0x3D24, 0x8020}, // DYNAMIC_SEQRAM_24
 	{0x3D26, 0x4882}, // DYNAMIC_SEQRAM_26
 	{0x3D28, 0x4269}, // DYNAMIC_SEQRAM_28
 	{0x3D2A, 0x6A95}, // DYNAMIC_SEQRAM_2A
 	{0x3D2C, 0x5988}, // DYNAMIC_SEQRAM_2C
 	{0x3D2E, 0x5A83}, // DYNAMIC_SEQRAM_2E
 	{0x3D30, 0x5885}, // DYNAMIC_SEQRAM_30
 	{0x3D32, 0x6280}, // DYNAMIC_SEQRAM_32
 	{0x3D34, 0x6289}, // DYNAMIC_SEQRAM_34
 	{0x3D36, 0x6097}, // DYNAMIC_SEQRAM_36
 	{0x3D38, 0x5782}, // DYNAMIC_SEQRAM_38
 	{0x3D3A, 0x605C}, // DYNAMIC_SEQRAM_3A
 	{0x3D3C, 0xBF18}, // DYNAMIC_SEQRAM_3C
 	{0x3D3E, 0x0961}, // DYNAMIC_SEQRAM_3E
 	{0x3D40, 0x5080}, // DYNAMIC_SEQRAM_40
 	{0x3D42, 0x2090}, // DYNAMIC_SEQRAM_42
 	{0x3D44, 0x4390}, // DYNAMIC_SEQRAM_44
 	{0x3D46, 0x4382}, // DYNAMIC_SEQRAM_46
 	{0x3D48, 0x5F8A}, // DYNAMIC_SEQRAM_48
 	{0x3D4A, 0x5D5D}, // DYNAMIC_SEQRAM_4A
 	{0x3D4C, 0x9C63}, // DYNAMIC_SEQRAM_4C
 	{0x3D4E, 0x8063}, // DYNAMIC_SEQRAM_4E
 	{0x3D50, 0xA960}, // DYNAMIC_SEQRAM_50
 	{0x3D52, 0x9757}, // DYNAMIC_SEQRAM_52
 	{0x3D54, 0x8260}, // DYNAMIC_SEQRAM_54
 	{0x3D56, 0x5CFF}, // DYNAMIC_SEQRAM_56
 	{0x3D58, 0xBF10}, // DYNAMIC_SEQRAM_58
 	{0x3D5A, 0x1681}, // DYNAMIC_SEQRAM_5A
 	{0x3D5C, 0x0802}, // DYNAMIC_SEQRAM_5C
 	{0x3D5E, 0x8000}, // DYNAMIC_SEQRAM_5E
 	{0x3D60, 0x141C}, // DYNAMIC_SEQRAM_60
 	{0x3D62, 0x6000}, // DYNAMIC_SEQRAM_62
 	{0x3D64, 0x6022}, // DYNAMIC_SEQRAM_64
 	{0x3D66, 0x4D80}, // DYNAMIC_SEQRAM_66
 	{0x3D68, 0x5C97}, // DYNAMIC_SEQRAM_68
 	{0x3D6A, 0x6A69}, // DYNAMIC_SEQRAM_6A
 	{0x3D6C, 0xAC6F}, // DYNAMIC_SEQRAM_6C
 	{0x3D6E, 0x4645}, // DYNAMIC_SEQRAM_6E
 	{0x3D70, 0x4400}, // DYNAMIC_SEQRAM_70
 	{0x3D72, 0x0513}, // DYNAMIC_SEQRAM_72
 	{0x3D74, 0x8069}, // DYNAMIC_SEQRAM_74
 	{0x3D76, 0x6AC6}, // DYNAMIC_SEQRAM_76
 	{0x3D78, 0x5F95}, // DYNAMIC_SEQRAM_78
 	{0x3D7A, 0x5F70}, // DYNAMIC_SEQRAM_7A
 	{0x3D7C, 0x8040}, // DYNAMIC_SEQRAM_7C
 	{0x3D7E, 0x4A81}, // DYNAMIC_SEQRAM_7E
 	{0x3D80, 0x0300}, // DYNAMIC_SEQRAM_80
 	{0x3D82, 0xE703}, // DYNAMIC_SEQRAM_82
 	{0x3D84, 0x0088}, // DYNAMIC_SEQRAM_84
 	{0x3D86, 0x4A83}, // DYNAMIC_SEQRAM_86
 	{0x3D88, 0x40FF}, // DYNAMIC_SEQRAM_88
 	{0x3D8A, 0xFFFF}, // DYNAMIC_SEQRAM_8A
 	{0x3D8C, 0xFD70}, // DYNAMIC_SEQRAM_8C
 	{0x3D8E, 0x8040}, // DYNAMIC_SEQRAM_8E
 	{0x3D90, 0x4A85}, // DYNAMIC_SEQRAM_90
 	{0x3D92, 0x4FA8}, // DYNAMIC_SEQRAM_92
 	{0x3D94, 0x4F8C}, // DYNAMIC_SEQRAM_94
 	{0x3D96, 0x0070}, // DYNAMIC_SEQRAM_96
 	{0x3D98, 0xBE47}, // DYNAMIC_SEQRAM_98
 	{0x3D9A, 0x8847}, // DYNAMIC_SEQRAM_9A
 	{0x3D9C, 0xBC78}, // DYNAMIC_SEQRAM_9C
 	{0x3D9E, 0x6B89}, // DYNAMIC_SEQRAM_9E
 	{0x3DA0, 0x6A80}, // DYNAMIC_SEQRAM_A0
 	{0x3DA2, 0x6986}, // DYNAMIC_SEQRAM_A2
 	{0x3DA4, 0x6B8E}, // DYNAMIC_SEQRAM_A4
 	{0x3DA6, 0x6B80}, // DYNAMIC_SEQRAM_A6
 	{0x3DA8, 0x6980}, // DYNAMIC_SEQRAM_A8
 	{0x3DAA, 0x6A88}, // DYNAMIC_SEQRAM_AA
 	{0x3DAC, 0x7C9F}, // DYNAMIC_SEQRAM_AC
 	{0x3DAE, 0x866B}, // DYNAMIC_SEQRAM_AE
 	{0x3DB0, 0x8765}, // DYNAMIC_SEQRAM_B0
 	{0x3DB2, 0x46FF}, // DYNAMIC_SEQRAM_B2
 	{0x3DB4, 0xE365}, // DYNAMIC_SEQRAM_B4
 	{0x3DB6, 0xA679}, // DYNAMIC_SEQRAM_B6
 	{0x3DB8, 0x4A40}, // DYNAMIC_SEQRAM_B8
 	{0x3DBA, 0x4580}, // DYNAMIC_SEQRAM_BA
 	{0x3DBC, 0x44BC}, // DYNAMIC_SEQRAM_BC
 	{0x3DBE, 0x7000}, // DYNAMIC_SEQRAM_BE
 	{0x3DC0, 0x8040}, // DYNAMIC_SEQRAM_C0
 	{0x3DC2, 0x0802}, // DYNAMIC_SEQRAM_C2
 	{0x3DC4, 0x10EF}, // DYNAMIC_SEQRAM_C4
 	{0x3DC6, 0x0104}, // DYNAMIC_SEQRAM_C6
 	{0x3DC8, 0x3860}, // DYNAMIC_SEQRAM_C8
 	{0x3DCA, 0x5D5D}, // DYNAMIC_SEQRAM_CA
 	{0x3DCC, 0x5682}, // DYNAMIC_SEQRAM_CC
 	{0x3DCE, 0x1300}, // DYNAMIC_SEQRAM_CE
 	{0x3DD0, 0x8648}, // DYNAMIC_SEQRAM_D0
 	{0x3DD2, 0x8202}, // DYNAMIC_SEQRAM_D2
 	{0x3DD4, 0x8082}, // DYNAMIC_SEQRAM_D4
 	{0x3DD6, 0x598A}, // DYNAMIC_SEQRAM_D6
 	{0x3DD8, 0x0280}, // DYNAMIC_SEQRAM_D8
 	{0x3DDA, 0x2048}, // DYNAMIC_SEQRAM_DA
 	{0x3DDC, 0x3060}, // DYNAMIC_SEQRAM_DC
 	{0x3DDE, 0x8042}, // DYNAMIC_SEQRAM_DE
 	{0x3DE0, 0x9259}, // DYNAMIC_SEQRAM_E0
 	{0x3DE2, 0x865A}, // DYNAMIC_SEQRAM_E2
 	{0x3DE4, 0x8258}, // DYNAMIC_SEQRAM_E4
 	{0x3DE6, 0x8562}, // DYNAMIC_SEQRAM_E6
 	{0x3DE8, 0x8062}, // DYNAMIC_SEQRAM_E8
 	{0x3DEA, 0x8560}, // DYNAMIC_SEQRAM_EA
 	{0x3DEC, 0x9257}, // DYNAMIC_SEQRAM_EC
 	{0x3DEE, 0x8221}, // DYNAMIC_SEQRAM_EE
 	{0x3DF0, 0x10FF}, // DYNAMIC_SEQRAM_F0
 	{0x3DF2, 0xB757}, // DYNAMIC_SEQRAM_F2
 	{0x3DF4, 0x9361}, // DYNAMIC_SEQRAM_F4
 	{0x3DF6, 0x1019}, // DYNAMIC_SEQRAM_F6
 	{0x3DF8, 0x8020}, // DYNAMIC_SEQRAM_F8
 	{0x3DFA, 0x9043}, // DYNAMIC_SEQRAM_FA
 	{0x3DFC, 0x8E43}, // DYNAMIC_SEQRAM_FC
 	{0x3DFE, 0x845F}, // DYNAMIC_SEQRAM_FE
 	{0x3E00, 0x835D}, // DYNAMIC_SEQRAM_100
 	{0x3E02, 0x805D}, // DYNAMIC_SEQRAM_102
 	{0x3E04, 0x8163}, // DYNAMIC_SEQRAM_104
 	{0x3E06, 0x8063}, // DYNAMIC_SEQRAM_106
 	{0x3E08, 0xA060}, // DYNAMIC_SEQRAM_108
 	{0x3E0A, 0x9157}, // DYNAMIC_SEQRAM_10A
 	{0x3E0C, 0x8260}, // DYNAMIC_SEQRAM_10C
 	{0x3E0E, 0x5CFF}, // DYNAMIC_SEQRAM_10E
 	{0x3E10, 0xFFFF}, // DYNAMIC_SEQRAM_110
 	{0x3E12, 0xFFE5}, // DYNAMIC_SEQRAM_112
 	{0x3E14, 0x1016}, // DYNAMIC_SEQRAM_114
 	{0x3E16, 0x2048}, // DYNAMIC_SEQRAM_116
 	{0x3E18, 0x0802}, // DYNAMIC_SEQRAM_118
 	{0x3E1A, 0x1C60}, // DYNAMIC_SEQRAM_11A
 	{0x3E1C, 0x0014}, // DYNAMIC_SEQRAM_11C
 	{0x3E1E, 0x0060}, // DYNAMIC_SEQRAM_11E
 	{0x3E20, 0x2205}, // DYNAMIC_SEQRAM_120
 	{0x3E22, 0x8120}, // DYNAMIC_SEQRAM_122
 	{0x3E24, 0x908F}, // DYNAMIC_SEQRAM_124
 	{0x3E26, 0x6A80}, // DYNAMIC_SEQRAM_126
 	{0x3E28, 0x6982}, // DYNAMIC_SEQRAM_128
 	{0x3E2A, 0x5F9F}, // DYNAMIC_SEQRAM_12A
 	{0x3E2C, 0x6F46}, // DYNAMIC_SEQRAM_12C
 	{0x3E2E, 0x4544}, // DYNAMIC_SEQRAM_12E
 	{0x3E30, 0x0005}, // DYNAMIC_SEQRAM_130
 	{0x3E32, 0x8013}, // DYNAMIC_SEQRAM_132
 	{0x3E34, 0x8069}, // DYNAMIC_SEQRAM_134
 	{0x3E36, 0x6A80}, // DYNAMIC_SEQRAM_136
 	{0x3E38, 0x7000}, // DYNAMIC_SEQRAM_138
 	{0x3E3A, 0x0000}, // DYNAMIC_SEQRAM_13A
 	{0x3E3C, 0x0000}, // DYNAMIC_SEQRAM_13C
 	{0x3E3E, 0x0000}, // DYNAMIC_SEQRAM_13E
 	{0x3E40, 0x0000}, // DYNAMIC_SEQRAM_140
 	{0x3E42, 0x0000}, // DYNAMIC_SEQRAM_142
 	{0x3E44, 0x0000}, // DYNAMIC_SEQRAM_144
 	{0x3E46, 0x0000}, // DYNAMIC_SEQRAM_146
 	{0x3E48, 0x0000}, // DYNAMIC_SEQRAM_148
 	{0x3E4A, 0x0000}, // DYNAMIC_SEQRAM_14A
 	{0x3E4C, 0x0000}, // DYNAMIC_SEQRAM_14C
 	{0x3E4E, 0x0000}, // DYNAMIC_SEQRAM_14E
 	{0x3E50, 0x0000}, // DYNAMIC_SEQRAM_150
 	{0x3E52, 0x0000}, // DYNAMIC_SEQRAM_152
 	{0x3E54, 0x0000}, // DYNAMIC_SEQRAM_154
 	{0x3E56, 0x0000}, // DYNAMIC_SEQRAM_156
 	{0x3E58, 0x0000}, // DYNAMIC_SEQRAM_158
 	{0x3E5A, 0x0000}, // DYNAMIC_SEQRAM_15A
 	{0x3E5C, 0x0000}, // DYNAMIC_SEQRAM_15C
 	{0x3E5E, 0x0000}, // DYNAMIC_SEQRAM_15E
 	{0x3E60, 0x0000}, // DYNAMIC_SEQRAM_160
 	{0x3E62, 0x0000}, // DYNAMIC_SEQRAM_162
 	{0x3E64, 0x0000}, // DYNAMIC_SEQRAM_164
 	{0x3E66, 0x0000}, // DYNAMIC_SEQRAM_166
 	{0x3E68, 0x0000}, // DYNAMIC_SEQRAM_168
 	{0x3E6A, 0x0000}, // DYNAMIC_SEQRAM_16A
 	{0x3E6C, 0x0000}, // DYNAMIC_SEQRAM_16C
 	{0x3E6E, 0x0000}, // DYNAMIC_SEQRAM_16E
 	{0x3E70, 0x0000}, // DYNAMIC_SEQRAM_170
 	{0x3E72, 0x0000}, // DYNAMIC_SEQRAM_172
 	{0x3E74, 0x0000}, // DYNAMIC_SEQRAM_174
 	{0x3E76, 0x0000}, // DYNAMIC_SEQRAM_176
 	{0x3E78, 0x0000}, // DYNAMIC_SEQRAM_178
 	{0x3E7A, 0x0000}, // DYNAMIC_SEQRAM_17A
 	{0x3E7C, 0x0000}, // DYNAMIC_SEQRAM_17C
 	{0x3E7E, 0x0000}, // DYNAMIC_SEQRAM_17E
 	{0x3E80, 0x0000}, // DYNAMIC_SEQRAM_180
 	{0x3E82, 0x0000}, // DYNAMIC_SEQRAM_182
 	{0x3E84, 0x0000}, // DYNAMIC_SEQRAM_184
 	{0x3E86, 0x0000}, // DYNAMIC_SEQRAM_186
 	{0x3E88, 0x0000}, // DYNAMIC_SEQRAM_188
 	{0x3E8A, 0x0000}, // DYNAMIC_SEQRAM_18A
 	{0x3E8C, 0x0000}, // DYNAMIC_SEQRAM_18C
 	{0x3E8E, 0x0000}, // DYNAMIC_SEQRAM_18E
 	{0x3E90, 0x0000}, // DYNAMIC_SEQRAM_190
 	{0x3E92, 0x0000}, // DYNAMIC_SEQRAM_192
 	{0x3E94, 0x0000}, // DYNAMIC_SEQRAM_194
 	{0x3E96, 0x0000}, // DYNAMIC_SEQRAM_196
 	{0x3E98, 0x0000}, // DYNAMIC_SEQRAM_198
 	{0x3E9A, 0x0000}, // DYNAMIC_SEQRAM_19A
 	{0x3E9C, 0x0000}, // DYNAMIC_SEQRAM_19C
 	{0x3E9E, 0x0000}, // DYNAMIC_SEQRAM_19E
 	{0x3EA0, 0x0000}, // DYNAMIC_SEQRAM_1A0
 	{0x3EA2, 0x0000}, // DYNAMIC_SEQRAM_1A2
 	{0x3EA4, 0x0000}, // DYNAMIC_SEQRAM_1A4
 	{0x3EA6, 0x0000}, // DYNAMIC_SEQRAM_1A6
 	{0x3EA8, 0x0000}, // DYNAMIC_SEQRAM_1A8
 	{0x3EAA, 0x0000}, // DYNAMIC_SEQRAM_1AA
 	{0x3EAC, 0x0000}, // DYNAMIC_SEQRAM_1AC
 	{0x3EAE, 0x0000}, // DYNAMIC_SEQRAM_1AE
 	{0x3EB0, 0x0000}, // DYNAMIC_SEQRAM_1B0
 	{0x3EB2, 0x0000}, // DYNAMIC_SEQRAM_1B2
 	{0x3EB4, 0x0000}, // DYNAMIC_SEQRAM_1B4
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3EBA, 0xAAAA}, // DAC_LD_4_5
 	{0x3EBC, 0x0086}, // DAC_LD_6_7
 	{0x3EC0, 0x1E00}, // DAC_LD_10_11
 	{0x3EC2, 0x000B}, // DAC_LD_12_13
 	{0x3EC4, 0x3300}, // DAC_LD_14_15
 	{0x3EC6, 0xEA44}, // DAC_LD_16_17
 	{0x3EC8, 0x6F6F}, // DAC_LD_18_19
 	{0x3ECA, 0x2F4A}, // DAC_LD_20_21
 	{0x3ECC, 0x0506}, // DAC_LD_22_23
 	{0x3ECE, 0x203B}, // DAC_LD_24_25
 	{0x3ED0, 0x13F0}, // DAC_LD_26_27
 	{0x3ED2, 0x9A3D}, // DAC_LD_28_29
 	{0x3ED4, 0x862F}, // DAC_LD_30_31
 	{0x3ED6, 0x4081}, // DAC_LD_32_33
 	{0x3ED8, 0x4003}, // DAC_LD_34_35
 	{0x3EDA, 0x9A80}, // DAC_LD_36_37
 	{0x3EDC, 0xC000}, // DAC_LD_38_39
 	{0x3EDE, 0xC103}, // DAC_LD_40_41
 	{0x3426, 0x1600}, // AD_RESERVE_1_0
 	{0x342A, 0x0038}, // PULSE_CONFIG
 	{0x3F3E, 0x0001}, // ANALOG_CONTROL10
 	{0x341A, 0x6051}, // AD_SH1_0
 	{0x3420, 0x6051}, // AD_SH2_0
 	{0x3EC2, 0x000A}, // DAC_LD_12_13
 	{0x3ED8, 0x8003}, // DAC_LD_34_35
 	{0x341A, 0x4735}, // AD_SH1_0
 	{0x3420, 0x4735}, // AD_SH2_0
 	{0x3426, 0x8A1A}, // AD_RESERVE_1_0
 	{0x342A, 0x0018}, // PULSE_CONFIG
 	{0x3ED2, 0xA53D}, // DAC_LD_28_29
 	{0x3EDA, 0xA580}, // DAC_LD_36_37
 	{0x3EBA, 0xAAAD}, // DAC_LD_4_5
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3F3E, 0x0000}, // ANALOG_CONTROL10
 	{0x31B0, 0x0058}, // FRAME_PREAMBLE
 	{0x31B2, 0x002C}, // LINE_PREAMBLE
 	{0x31B4, 0x23D2}, // MIPI_TIMING_0
 	{0x31B6, 0x13E9}, // MIPI_TIMING_1
 	{0x31B8, 0x2413}, // MIPI_TIMING_2
 	{0x31BA, 0x1C68}, // MIPI_TIMING_3
 	{0x31BC, 0x860B}, // MIPI_TIMING_4
 	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
 	{0x0304, 0x0303}, // PRE_PLL_CLK_DIV   *****
// 	{0x0306, 0x5859}, // PLL_MULTIPLIER    *****
 	{0x0306, 0x7359}, // PLL_MULTIPLIER
 	{0x0302, 0x0001}, // VT_SYS_CLK_DIV   *****
 	{0x030A, 0x0001}, // OP_SYS_CLK_DIV   *****
 	{0x0300, 0x0005}, // VT_PIX_CLK_DIV   *****
 	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
 	{0x3016, 0x0101}, // ROW_SPEED
 	{0x3004, 0x0004}, // X_ADDR_START_
 	{0x3008, 0x0A2B}, // X_ADDR_END_
 	{0x3002, 0x0004}, // Y_ADDR_START_
 	{0x3006, 0x07A3}, // Y_ADDR_END_
 	//sensor进行水平镜像，pxl_fmt 变为 RG10，主要是为了兼容VI/ISP (只能识别RG和BG)
 	//{0x3040, 0x4041}, // READ_MODE
	{0x3040, 0x0041}, // READ_MODE
 	{0x317A, 0x416E}, // ANALOG_CONTROL6
 	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
 	{0x034C, 0x0A20}, // X_OUTPUT_SIZE  2592
 	{0x034E, 0x0798}, // Y_OUTPUT_SIZE  1944
 	{0x300C, 0x1178}, // LINE_LENGTH_PCK_
 	{0x300A, 0x092A}, // FRAME_LENGTH_LINES_
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00A8}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00AA}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x3120, 0x0005}, // DITHER_CONTROL
 	//{0x300C, 0x0A80}, // LINE_LENGTH_PCK_    2688
 	//{0x300A, 0x08FC}, // FRAME_LENGTH_LINES_ 2300  
 	{0x3012, 0x08DC}, // COARSE_INTEGRATION_TIME_
 	// {0x301A, 0x021C}, // RESET_REGISTER
 	{AR0521_TABLE_END, 0x0000}
};


static const ar0521_reg mode_1920x1080[] = {
	 	{0x0103, 0x01  }, // Including sw reset
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{0x3042, 0x0004}, // DARK_CONTROL2
 	{0x3044, 0x4580}, // DARK_CONTROL
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3120, 0x0001}, // DITHER_CONTROL
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x30D2, 0x0000}, // CRM_CONTROL
 	{0x30D4, 0x0000}, // COLUMN_CORRECTION
 	{0x30D6, 0x2FFF}, // COLUMN_CORRECTION2
 	{0x30DA, 0x0FFF}, // COLUMN_CORRECTION_CLIP2
 	{0x30DC, 0x0FFF}, // COLUMN_CORRECTION_CLIP3
 	{0x30DE, 0x0000}, // COLUMN_GROUP_CORRECTION
 	{0x31E0, 0x0781}, // PIX_DEF_ID
 	{0x3180, 0x9434}, // FINE_DIG_CORRECTION_CONTROL
 	{0x3172, 0x0206}, // ANALOG_CONTROL2
 	{0x3F00, 0x0017}, // BM_T0
 	{0x3F02, 0x02DD}, // BM_T1
 	{0x3F04, 0x0020}, // NOISE_GAIN_THRESHOLD0
 	{0x3F06, 0x0040}, // NOISE_GAIN_THRESHOLD1
 	{0x3F08, 0x0070}, // NOISE_GAIN_THRESHOLD2
 	{0x3F0A, 0x0101}, // NOISE_FLOOR10
 	{0x3F0C, 0x0302}, // NOISE_FLOOR32
 	{0x3F1E, 0x0022}, // NOISE_COEF
 	{0x3F1A, 0x01FF}, // CROSSFACTOR2
 	{0x3F14, 0x0505}, // SINGLE_K_FACTOR2
 	{0x3F44, 0x0707}, // COUPLE_K_FACTOR2
 	{0x3F18, 0x01FF}, // CROSSFACTOR1
 	{0x3F12, 0x0505}, // SINGLE_K_FACTOR1
 	{0x3F42, 0x1511}, // COUPLE_K_FACTOR1
 	{0x3F16, 0x01FF}, // CROSSFACTOR0
 	{0x3F10, 0x0505}, // SINGLE_K_FACTOR0
 	{0x3F40, 0x1511}, // COUPLE_K_FACTOR0
 	{0x3D00, 0x043E}, // DYNAMIC_SEQRAM_00
 	{0x3D02, 0x4760}, // DYNAMIC_SEQRAM_02
 	{0x3D04, 0xFFFF}, // DYNAMIC_SEQRAM_04
 	{0x3D06, 0xFFFF}, // DYNAMIC_SEQRAM_06
 	{0x3D08, 0x8000}, // DYNAMIC_SEQRAM_08
 	{0x3D0A, 0x0510}, // DYNAMIC_SEQRAM_0A
 	{0x3D0C, 0xAF08}, // DYNAMIC_SEQRAM_0C
 	{0x3D0E, 0x0252}, // DYNAMIC_SEQRAM_0E
 	{0x3D10, 0x486F}, // DYNAMIC_SEQRAM_10
 	{0x3D12, 0x5D5D}, // DYNAMIC_SEQRAM_12
 	{0x3D14, 0x8056}, // DYNAMIC_SEQRAM_14
 	{0x3D16, 0x8313}, // DYNAMIC_SEQRAM_16
 	{0x3D18, 0x0087}, // DYNAMIC_SEQRAM_18
 	{0x3D1A, 0x6A48}, // DYNAMIC_SEQRAM_1A
 	{0x3D1C, 0x6982}, // DYNAMIC_SEQRAM_1C
 	{0x3D1E, 0x0280}, // DYNAMIC_SEQRAM_1E
 	{0x3D20, 0x8359}, // DYNAMIC_SEQRAM_20
 	{0x3D22, 0x8D02}, // DYNAMIC_SEQRAM_22
 	{0x3D24, 0x8020}, // DYNAMIC_SEQRAM_24
 	{0x3D26, 0x4882}, // DYNAMIC_SEQRAM_26
 	{0x3D28, 0x4269}, // DYNAMIC_SEQRAM_28
 	{0x3D2A, 0x6A95}, // DYNAMIC_SEQRAM_2A
 	{0x3D2C, 0x5988}, // DYNAMIC_SEQRAM_2C
 	{0x3D2E, 0x5A83}, // DYNAMIC_SEQRAM_2E
 	{0x3D30, 0x5885}, // DYNAMIC_SEQRAM_30
 	{0x3D32, 0x6280}, // DYNAMIC_SEQRAM_32
 	{0x3D34, 0x6289}, // DYNAMIC_SEQRAM_34
 	{0x3D36, 0x6097}, // DYNAMIC_SEQRAM_36
 	{0x3D38, 0x5782}, // DYNAMIC_SEQRAM_38
 	{0x3D3A, 0x605C}, // DYNAMIC_SEQRAM_3A
 	{0x3D3C, 0xBF18}, // DYNAMIC_SEQRAM_3C
 	{0x3D3E, 0x0961}, // DYNAMIC_SEQRAM_3E
 	{0x3D40, 0x5080}, // DYNAMIC_SEQRAM_40
 	{0x3D42, 0x2090}, // DYNAMIC_SEQRAM_42
 	{0x3D44, 0x4390}, // DYNAMIC_SEQRAM_44
 	{0x3D46, 0x4382}, // DYNAMIC_SEQRAM_46
 	{0x3D48, 0x5F8A}, // DYNAMIC_SEQRAM_48
 	{0x3D4A, 0x5D5D}, // DYNAMIC_SEQRAM_4A
 	{0x3D4C, 0x9C63}, // DYNAMIC_SEQRAM_4C
 	{0x3D4E, 0x8063}, // DYNAMIC_SEQRAM_4E
 	{0x3D50, 0xA960}, // DYNAMIC_SEQRAM_50
 	{0x3D52, 0x9757}, // DYNAMIC_SEQRAM_52
 	{0x3D54, 0x8260}, // DYNAMIC_SEQRAM_54
 	{0x3D56, 0x5CFF}, // DYNAMIC_SEQRAM_56
 	{0x3D58, 0xBF10}, // DYNAMIC_SEQRAM_58
 	{0x3D5A, 0x1681}, // DYNAMIC_SEQRAM_5A
 	{0x3D5C, 0x0802}, // DYNAMIC_SEQRAM_5C
 	{0x3D5E, 0x8000}, // DYNAMIC_SEQRAM_5E
 	{0x3D60, 0x141C}, // DYNAMIC_SEQRAM_60
 	{0x3D62, 0x6000}, // DYNAMIC_SEQRAM_62
 	{0x3D64, 0x6022}, // DYNAMIC_SEQRAM_64
 	{0x3D66, 0x4D80}, // DYNAMIC_SEQRAM_66
 	{0x3D68, 0x5C97}, // DYNAMIC_SEQRAM_68
 	{0x3D6A, 0x6A69}, // DYNAMIC_SEQRAM_6A
 	{0x3D6C, 0xAC6F}, // DYNAMIC_SEQRAM_6C
 	{0x3D6E, 0x4645}, // DYNAMIC_SEQRAM_6E
 	{0x3D70, 0x4400}, // DYNAMIC_SEQRAM_70
 	{0x3D72, 0x0513}, // DYNAMIC_SEQRAM_72
 	{0x3D74, 0x8069}, // DYNAMIC_SEQRAM_74
 	{0x3D76, 0x6AC6}, // DYNAMIC_SEQRAM_76
 	{0x3D78, 0x5F95}, // DYNAMIC_SEQRAM_78
 	{0x3D7A, 0x5F70}, // DYNAMIC_SEQRAM_7A
 	{0x3D7C, 0x8040}, // DYNAMIC_SEQRAM_7C
 	{0x3D7E, 0x4A81}, // DYNAMIC_SEQRAM_7E
 	{0x3D80, 0x0300}, // DYNAMIC_SEQRAM_80
 	{0x3D82, 0xE703}, // DYNAMIC_SEQRAM_82
 	{0x3D84, 0x0088}, // DYNAMIC_SEQRAM_84
 	{0x3D86, 0x4A83}, // DYNAMIC_SEQRAM_86
 	{0x3D88, 0x40FF}, // DYNAMIC_SEQRAM_88
 	{0x3D8A, 0xFFFF}, // DYNAMIC_SEQRAM_8A
 	{0x3D8C, 0xFD70}, // DYNAMIC_SEQRAM_8C
 	{0x3D8E, 0x8040}, // DYNAMIC_SEQRAM_8E
 	{0x3D90, 0x4A85}, // DYNAMIC_SEQRAM_90
 	{0x3D92, 0x4FA8}, // DYNAMIC_SEQRAM_92
 	{0x3D94, 0x4F8C}, // DYNAMIC_SEQRAM_94
 	{0x3D96, 0x0070}, // DYNAMIC_SEQRAM_96
 	{0x3D98, 0xBE47}, // DYNAMIC_SEQRAM_98
 	{0x3D9A, 0x8847}, // DYNAMIC_SEQRAM_9A
 	{0x3D9C, 0xBC78}, // DYNAMIC_SEQRAM_9C
 	{0x3D9E, 0x6B89}, // DYNAMIC_SEQRAM_9E
 	{0x3DA0, 0x6A80}, // DYNAMIC_SEQRAM_A0
 	{0x3DA2, 0x6986}, // DYNAMIC_SEQRAM_A2
 	{0x3DA4, 0x6B8E}, // DYNAMIC_SEQRAM_A4
 	{0x3DA6, 0x6B80}, // DYNAMIC_SEQRAM_A6
 	{0x3DA8, 0x6980}, // DYNAMIC_SEQRAM_A8
 	{0x3DAA, 0x6A88}, // DYNAMIC_SEQRAM_AA
 	{0x3DAC, 0x7C9F}, // DYNAMIC_SEQRAM_AC
 	{0x3DAE, 0x866B}, // DYNAMIC_SEQRAM_AE
 	{0x3DB0, 0x8765}, // DYNAMIC_SEQRAM_B0
 	{0x3DB2, 0x46FF}, // DYNAMIC_SEQRAM_B2
 	{0x3DB4, 0xE365}, // DYNAMIC_SEQRAM_B4
 	{0x3DB6, 0xA679}, // DYNAMIC_SEQRAM_B6
 	{0x3DB8, 0x4A40}, // DYNAMIC_SEQRAM_B8
 	{0x3DBA, 0x4580}, // DYNAMIC_SEQRAM_BA
 	{0x3DBC, 0x44BC}, // DYNAMIC_SEQRAM_BC
 	{0x3DBE, 0x7000}, // DYNAMIC_SEQRAM_BE
 	{0x3DC0, 0x8040}, // DYNAMIC_SEQRAM_C0
 	{0x3DC2, 0x0802}, // DYNAMIC_SEQRAM_C2
 	{0x3DC4, 0x10EF}, // DYNAMIC_SEQRAM_C4
 	{0x3DC6, 0x0104}, // DYNAMIC_SEQRAM_C6
 	{0x3DC8, 0x3860}, // DYNAMIC_SEQRAM_C8
 	{0x3DCA, 0x5D5D}, // DYNAMIC_SEQRAM_CA
 	{0x3DCC, 0x5682}, // DYNAMIC_SEQRAM_CC
 	{0x3DCE, 0x1300}, // DYNAMIC_SEQRAM_CE
 	{0x3DD0, 0x8648}, // DYNAMIC_SEQRAM_D0
 	{0x3DD2, 0x8202}, // DYNAMIC_SEQRAM_D2
 	{0x3DD4, 0x8082}, // DYNAMIC_SEQRAM_D4
 	{0x3DD6, 0x598A}, // DYNAMIC_SEQRAM_D6
 	{0x3DD8, 0x0280}, // DYNAMIC_SEQRAM_D8
 	{0x3DDA, 0x2048}, // DYNAMIC_SEQRAM_DA
 	{0x3DDC, 0x3060}, // DYNAMIC_SEQRAM_DC
 	{0x3DDE, 0x8042}, // DYNAMIC_SEQRAM_DE
 	{0x3DE0, 0x9259}, // DYNAMIC_SEQRAM_E0
 	{0x3DE2, 0x865A}, // DYNAMIC_SEQRAM_E2
 	{0x3DE4, 0x8258}, // DYNAMIC_SEQRAM_E4
 	{0x3DE6, 0x8562}, // DYNAMIC_SEQRAM_E6
 	{0x3DE8, 0x8062}, // DYNAMIC_SEQRAM_E8
 	{0x3DEA, 0x8560}, // DYNAMIC_SEQRAM_EA
 	{0x3DEC, 0x9257}, // DYNAMIC_SEQRAM_EC
 	{0x3DEE, 0x8221}, // DYNAMIC_SEQRAM_EE
 	{0x3DF0, 0x10FF}, // DYNAMIC_SEQRAM_F0
 	{0x3DF2, 0xB757}, // DYNAMIC_SEQRAM_F2
 	{0x3DF4, 0x9361}, // DYNAMIC_SEQRAM_F4
 	{0x3DF6, 0x1019}, // DYNAMIC_SEQRAM_F6
 	{0x3DF8, 0x8020}, // DYNAMIC_SEQRAM_F8
 	{0x3DFA, 0x9043}, // DYNAMIC_SEQRAM_FA
 	{0x3DFC, 0x8E43}, // DYNAMIC_SEQRAM_FC
 	{0x3DFE, 0x845F}, // DYNAMIC_SEQRAM_FE
 	{0x3E00, 0x835D}, // DYNAMIC_SEQRAM_100
 	{0x3E02, 0x805D}, // DYNAMIC_SEQRAM_102
 	{0x3E04, 0x8163}, // DYNAMIC_SEQRAM_104
 	{0x3E06, 0x8063}, // DYNAMIC_SEQRAM_106
 	{0x3E08, 0xA060}, // DYNAMIC_SEQRAM_108
 	{0x3E0A, 0x9157}, // DYNAMIC_SEQRAM_10A
 	{0x3E0C, 0x8260}, // DYNAMIC_SEQRAM_10C
 	{0x3E0E, 0x5CFF}, // DYNAMIC_SEQRAM_10E
 	{0x3E10, 0xFFFF}, // DYNAMIC_SEQRAM_110
 	{0x3E12, 0xFFE5}, // DYNAMIC_SEQRAM_112
 	{0x3E14, 0x1016}, // DYNAMIC_SEQRAM_114
 	{0x3E16, 0x2048}, // DYNAMIC_SEQRAM_116
 	{0x3E18, 0x0802}, // DYNAMIC_SEQRAM_118
 	{0x3E1A, 0x1C60}, // DYNAMIC_SEQRAM_11A
 	{0x3E1C, 0x0014}, // DYNAMIC_SEQRAM_11C
 	{0x3E1E, 0x0060}, // DYNAMIC_SEQRAM_11E
 	{0x3E20, 0x2205}, // DYNAMIC_SEQRAM_120
 	{0x3E22, 0x8120}, // DYNAMIC_SEQRAM_122
 	{0x3E24, 0x908F}, // DYNAMIC_SEQRAM_124
 	{0x3E26, 0x6A80}, // DYNAMIC_SEQRAM_126
 	{0x3E28, 0x6982}, // DYNAMIC_SEQRAM_128
 	{0x3E2A, 0x5F9F}, // DYNAMIC_SEQRAM_12A
 	{0x3E2C, 0x6F46}, // DYNAMIC_SEQRAM_12C
 	{0x3E2E, 0x4544}, // DYNAMIC_SEQRAM_12E
 	{0x3E30, 0x0005}, // DYNAMIC_SEQRAM_130
 	{0x3E32, 0x8013}, // DYNAMIC_SEQRAM_132
 	{0x3E34, 0x8069}, // DYNAMIC_SEQRAM_134
 	{0x3E36, 0x6A80}, // DYNAMIC_SEQRAM_136
 	{0x3E38, 0x7000}, // DYNAMIC_SEQRAM_138
 	{0x3E3A, 0x0000}, // DYNAMIC_SEQRAM_13A
 	{0x3E3C, 0x0000}, // DYNAMIC_SEQRAM_13C
 	{0x3E3E, 0x0000}, // DYNAMIC_SEQRAM_13E
 	{0x3E40, 0x0000}, // DYNAMIC_SEQRAM_140
 	{0x3E42, 0x0000}, // DYNAMIC_SEQRAM_142
 	{0x3E44, 0x0000}, // DYNAMIC_SEQRAM_144
 	{0x3E46, 0x0000}, // DYNAMIC_SEQRAM_146
 	{0x3E48, 0x0000}, // DYNAMIC_SEQRAM_148
 	{0x3E4A, 0x0000}, // DYNAMIC_SEQRAM_14A
 	{0x3E4C, 0x0000}, // DYNAMIC_SEQRAM_14C
 	{0x3E4E, 0x0000}, // DYNAMIC_SEQRAM_14E
 	{0x3E50, 0x0000}, // DYNAMIC_SEQRAM_150
 	{0x3E52, 0x0000}, // DYNAMIC_SEQRAM_152
 	{0x3E54, 0x0000}, // DYNAMIC_SEQRAM_154
 	{0x3E56, 0x0000}, // DYNAMIC_SEQRAM_156
 	{0x3E58, 0x0000}, // DYNAMIC_SEQRAM_158
 	{0x3E5A, 0x0000}, // DYNAMIC_SEQRAM_15A
 	{0x3E5C, 0x0000}, // DYNAMIC_SEQRAM_15C
 	{0x3E5E, 0x0000}, // DYNAMIC_SEQRAM_15E
 	{0x3E60, 0x0000}, // DYNAMIC_SEQRAM_160
 	{0x3E62, 0x0000}, // DYNAMIC_SEQRAM_162
 	{0x3E64, 0x0000}, // DYNAMIC_SEQRAM_164
 	{0x3E66, 0x0000}, // DYNAMIC_SEQRAM_166
 	{0x3E68, 0x0000}, // DYNAMIC_SEQRAM_168
 	{0x3E6A, 0x0000}, // DYNAMIC_SEQRAM_16A
 	{0x3E6C, 0x0000}, // DYNAMIC_SEQRAM_16C
 	{0x3E6E, 0x0000}, // DYNAMIC_SEQRAM_16E
 	{0x3E70, 0x0000}, // DYNAMIC_SEQRAM_170
 	{0x3E72, 0x0000}, // DYNAMIC_SEQRAM_172
 	{0x3E74, 0x0000}, // DYNAMIC_SEQRAM_174
 	{0x3E76, 0x0000}, // DYNAMIC_SEQRAM_176
 	{0x3E78, 0x0000}, // DYNAMIC_SEQRAM_178
 	{0x3E7A, 0x0000}, // DYNAMIC_SEQRAM_17A
 	{0x3E7C, 0x0000}, // DYNAMIC_SEQRAM_17C
 	{0x3E7E, 0x0000}, // DYNAMIC_SEQRAM_17E
 	{0x3E80, 0x0000}, // DYNAMIC_SEQRAM_180
 	{0x3E82, 0x0000}, // DYNAMIC_SEQRAM_182
 	{0x3E84, 0x0000}, // DYNAMIC_SEQRAM_184
 	{0x3E86, 0x0000}, // DYNAMIC_SEQRAM_186
 	{0x3E88, 0x0000}, // DYNAMIC_SEQRAM_188
 	{0x3E8A, 0x0000}, // DYNAMIC_SEQRAM_18A
 	{0x3E8C, 0x0000}, // DYNAMIC_SEQRAM_18C
 	{0x3E8E, 0x0000}, // DYNAMIC_SEQRAM_18E
 	{0x3E90, 0x0000}, // DYNAMIC_SEQRAM_190
 	{0x3E92, 0x0000}, // DYNAMIC_SEQRAM_192
 	{0x3E94, 0x0000}, // DYNAMIC_SEQRAM_194
 	{0x3E96, 0x0000}, // DYNAMIC_SEQRAM_196
 	{0x3E98, 0x0000}, // DYNAMIC_SEQRAM_198
 	{0x3E9A, 0x0000}, // DYNAMIC_SEQRAM_19A
 	{0x3E9C, 0x0000}, // DYNAMIC_SEQRAM_19C
 	{0x3E9E, 0x0000}, // DYNAMIC_SEQRAM_19E
 	{0x3EA0, 0x0000}, // DYNAMIC_SEQRAM_1A0
 	{0x3EA2, 0x0000}, // DYNAMIC_SEQRAM_1A2
 	{0x3EA4, 0x0000}, // DYNAMIC_SEQRAM_1A4
 	{0x3EA6, 0x0000}, // DYNAMIC_SEQRAM_1A6
 	{0x3EA8, 0x0000}, // DYNAMIC_SEQRAM_1A8
 	{0x3EAA, 0x0000}, // DYNAMIC_SEQRAM_1AA
 	{0x3EAC, 0x0000}, // DYNAMIC_SEQRAM_1AC
 	{0x3EAE, 0x0000}, // DYNAMIC_SEQRAM_1AE
 	{0x3EB0, 0x0000}, // DYNAMIC_SEQRAM_1B0
 	{0x3EB2, 0x0000}, // DYNAMIC_SEQRAM_1B2
 	{0x3EB4, 0x0000}, // DYNAMIC_SEQRAM_1B4
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3EBA, 0xAAAA}, // DAC_LD_4_5
 	{0x3EBC, 0x0086}, // DAC_LD_6_7
 	{0x3EC0, 0x1E00}, // DAC_LD_10_11
 	{0x3EC2, 0x000B}, // DAC_LD_12_13
 	{0x3EC4, 0x3300}, // DAC_LD_14_15
 	{0x3EC6, 0xEA44}, // DAC_LD_16_17
 	{0x3EC8, 0x6F6F}, // DAC_LD_18_19
 	{0x3ECA, 0x2F4A}, // DAC_LD_20_21
 	{0x3ECC, 0x0506}, // DAC_LD_22_23
 	{0x3ECE, 0x203B}, // DAC_LD_24_25
 	{0x3ED0, 0x13F0}, // DAC_LD_26_27
 	{0x3ED2, 0x9A3D}, // DAC_LD_28_29
 	{0x3ED4, 0x862F}, // DAC_LD_30_31
 	{0x3ED6, 0x4081}, // DAC_LD_32_33
 	{0x3ED8, 0x4003}, // DAC_LD_34_35
 	{0x3EDA, 0x9A80}, // DAC_LD_36_37
 	{0x3EDC, 0xC000}, // DAC_LD_38_39
 	{0x3EDE, 0xC103}, // DAC_LD_40_41
 	{0x3426, 0x1600}, // AD_RESERVE_1_0
 	{0x342A, 0x0038}, // PULSE_CONFIG
 	{0x3F3E, 0x0001}, // ANALOG_CONTROL10
 	{0x341A, 0x6051}, // AD_SH1_0
 	{0x3420, 0x6051}, // AD_SH2_0
 	{0x3EC2, 0x000A}, // DAC_LD_12_13
 	{0x3ED8, 0x8003}, // DAC_LD_34_35
 	{0x341A, 0x4735}, // AD_SH1_0
 	{0x3420, 0x4735}, // AD_SH2_0
 	{0x3426, 0x8A1A}, // AD_RESERVE_1_0
 	{0x342A, 0x0018}, // PULSE_CONFIG
 	{0x3ED2, 0xA53D}, // DAC_LD_28_29
 	{0x3EDA, 0xA580}, // DAC_LD_36_37
 	{0x3EBA, 0xAAAD}, // DAC_LD_4_5
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3F3E, 0x0000}, // ANALOG_CONTROL10
 	{0x31B0, 0x0058}, // FRAME_PREAMBLE
 	{0x31B2, 0x002C}, // LINE_PREAMBLE
 	{0x31B4, 0x23D2}, // MIPI_TIMING_0
 	{0x31B6, 0x13E9}, // MIPI_TIMING_1
 	{0x31B8, 0x2413}, // MIPI_TIMING_2
 	{0x31BA, 0x1C68}, // MIPI_TIMING_3
 	{0x31BC, 0x860B}, // MIPI_TIMING_4
 	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
 	{0x0304, 0x0303}, // PRE_PLL_CLK_DIV
 	{0x0306, 0x3A59}, // PLL_MULTIPLIER
// 	{0x0306, 0x7359}, // PLL_MULTIPLIER
 	{0x0302, 0x0001}, // VT_SYS_CLK_DIV
 	{0x030A, 0x0001}, // OP_SYS_CLK_DIV
 	{0x0300, 0x0003}, // VT_PIX_CLK_DIV
 	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
 	{0x3016, 0x0101}, // ROW_SPEED
 	{0x3004, 0x0004}, // X_ADDR_START_
 	{0x3008, 0x0A2B}, // X_ADDR_END_
 	{0x3002, 0x0004}, // Y_ADDR_START_
 	{0x3006, 0x07A3}, // Y_ADDR_END_
 	{0x3040, 0x0041}, // READ_MODE
 	{0x317A, 0x416E}, // ANALOG_CONTROL6
 	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
 	{0x034C, 0x0A28}, // X_OUTPUT_SIZE
 	{0x034E, 0x07A0}, // Y_OUTPUT_SIZE
 	{0x300C, 0x1178}, // LINE_LENGTH_PCK_
 	{0x300A, 0x092A}, // FRAME_LENGTH_LINES_
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00A8}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00AA}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x3120, 0x0005}, // DITHER_CONTROL
 	{0x300C, 0x0BE0}, // LINE_LENGTH_PCK_
 	{0x300A, 0x08EE}, // FRAME_LENGTH_LINES_
 	{0x3012, 0x08DC}, // COARSE_INTEGRATION_TIME_
 	// {0x301A, 0x021C}, // RESET_REGISTER
 	{AR0521_TABLE_END, 0x0000}
};

/*static const ar0521_reg mode_2600x1952_30fps[] = {
 	{0x0103, 0x01  }, // Including sw reset
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{AR0521_TABLE_WAIT_MS, AR0521_WAIT_MS},
 	{0x3042, 0x0004}, // DARK_CONTROL2
 	{0x3044, 0x4580}, // DARK_CONTROL
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3120, 0x0001}, // DITHER_CONTROL
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x30D2, 0x0000}, // CRM_CONTROL
 	{0x30D4, 0x0000}, // COLUMN_CORRECTION
 	{0x30D6, 0x2FFF}, // COLUMN_CORRECTION2
 	{0x30DA, 0x0FFF}, // COLUMN_CORRECTION_CLIP2
 	{0x30DC, 0x0FFF}, // COLUMN_CORRECTION_CLIP3
 	{0x30DE, 0x0000}, // COLUMN_GROUP_CORRECTION
 	{0x31E0, 0x0781}, // PIX_DEF_ID
 	{0x3180, 0x9434}, // FINE_DIG_CORRECTION_CONTROL
 	{0x3172, 0x0206}, // ANALOG_CONTROL2
 	{0x3F00, 0x0017}, // BM_T0
 	{0x3F02, 0x02DD}, // BM_T1
 	{0x3F04, 0x0020}, // NOISE_GAIN_THRESHOLD0
 	{0x3F06, 0x0040}, // NOISE_GAIN_THRESHOLD1
 	{0x3F08, 0x0070}, // NOISE_GAIN_THRESHOLD2
 	{0x3F0A, 0x0101}, // NOISE_FLOOR10
 	{0x3F0C, 0x0302}, // NOISE_FLOOR32
 	{0x3F1E, 0x0022}, // NOISE_COEF
 	{0x3F1A, 0x01FF}, // CROSSFACTOR2
 	{0x3F14, 0x0505}, // SINGLE_K_FACTOR2
 	{0x3F44, 0x0707}, // COUPLE_K_FACTOR2
 	{0x3F18, 0x01FF}, // CROSSFACTOR1
 	{0x3F12, 0x0505}, // SINGLE_K_FACTOR1
 	{0x3F42, 0x1511}, // COUPLE_K_FACTOR1
 	{0x3F16, 0x01FF}, // CROSSFACTOR0
 	{0x3F10, 0x0505}, // SINGLE_K_FACTOR0
 	{0x3F40, 0x1511}, // COUPLE_K_FACTOR0
 	{0x3D00, 0x043E}, // DYNAMIC_SEQRAM_00
 	{0x3D02, 0x4760}, // DYNAMIC_SEQRAM_02
 	{0x3D04, 0xFFFF}, // DYNAMIC_SEQRAM_04
 	{0x3D06, 0xFFFF}, // DYNAMIC_SEQRAM_06
 	{0x3D08, 0x8000}, // DYNAMIC_SEQRAM_08
 	{0x3D0A, 0x0510}, // DYNAMIC_SEQRAM_0A
 	{0x3D0C, 0xAF08}, // DYNAMIC_SEQRAM_0C
 	{0x3D0E, 0x0252}, // DYNAMIC_SEQRAM_0E
 	{0x3D10, 0x486F}, // DYNAMIC_SEQRAM_10
 	{0x3D12, 0x5D5D}, // DYNAMIC_SEQRAM_12
 	{0x3D14, 0x8056}, // DYNAMIC_SEQRAM_14
 	{0x3D16, 0x8313}, // DYNAMIC_SEQRAM_16
 	{0x3D18, 0x0087}, // DYNAMIC_SEQRAM_18
 	{0x3D1A, 0x6A48}, // DYNAMIC_SEQRAM_1A
 	{0x3D1C, 0x6982}, // DYNAMIC_SEQRAM_1C
 	{0x3D1E, 0x0280}, // DYNAMIC_SEQRAM_1E
 	{0x3D20, 0x8359}, // DYNAMIC_SEQRAM_20
 	{0x3D22, 0x8D02}, // DYNAMIC_SEQRAM_22
 	{0x3D24, 0x8020}, // DYNAMIC_SEQRAM_24
 	{0x3D26, 0x4882}, // DYNAMIC_SEQRAM_26
 	{0x3D28, 0x4269}, // DYNAMIC_SEQRAM_28
 	{0x3D2A, 0x6A95}, // DYNAMIC_SEQRAM_2A
 	{0x3D2C, 0x5988}, // DYNAMIC_SEQRAM_2C
 	{0x3D2E, 0x5A83}, // DYNAMIC_SEQRAM_2E
 	{0x3D30, 0x5885}, // DYNAMIC_SEQRAM_30
 	{0x3D32, 0x6280}, // DYNAMIC_SEQRAM_32
 	{0x3D34, 0x6289}, // DYNAMIC_SEQRAM_34
 	{0x3D36, 0x6097}, // DYNAMIC_SEQRAM_36
 	{0x3D38, 0x5782}, // DYNAMIC_SEQRAM_38
 	{0x3D3A, 0x605C}, // DYNAMIC_SEQRAM_3A
 	{0x3D3C, 0xBF18}, // DYNAMIC_SEQRAM_3C
 	{0x3D3E, 0x0961}, // DYNAMIC_SEQRAM_3E
 	{0x3D40, 0x5080}, // DYNAMIC_SEQRAM_40
 	{0x3D42, 0x2090}, // DYNAMIC_SEQRAM_42
 	{0x3D44, 0x4390}, // DYNAMIC_SEQRAM_44
 	{0x3D46, 0x4382}, // DYNAMIC_SEQRAM_46
 	{0x3D48, 0x5F8A}, // DYNAMIC_SEQRAM_48
 	{0x3D4A, 0x5D5D}, // DYNAMIC_SEQRAM_4A
 	{0x3D4C, 0x9C63}, // DYNAMIC_SEQRAM_4C
 	{0x3D4E, 0x8063}, // DYNAMIC_SEQRAM_4E
 	{0x3D50, 0xA960}, // DYNAMIC_SEQRAM_50
 	{0x3D52, 0x9757}, // DYNAMIC_SEQRAM_52
 	{0x3D54, 0x8260}, // DYNAMIC_SEQRAM_54
 	{0x3D56, 0x5CFF}, // DYNAMIC_SEQRAM_56
 	{0x3D58, 0xBF10}, // DYNAMIC_SEQRAM_58
 	{0x3D5A, 0x1681}, // DYNAMIC_SEQRAM_5A
 	{0x3D5C, 0x0802}, // DYNAMIC_SEQRAM_5C
 	{0x3D5E, 0x8000}, // DYNAMIC_SEQRAM_5E
 	{0x3D60, 0x141C}, // DYNAMIC_SEQRAM_60
 	{0x3D62, 0x6000}, // DYNAMIC_SEQRAM_62
 	{0x3D64, 0x6022}, // DYNAMIC_SEQRAM_64
 	{0x3D66, 0x4D80}, // DYNAMIC_SEQRAM_66
 	{0x3D68, 0x5C97}, // DYNAMIC_SEQRAM_68
 	{0x3D6A, 0x6A69}, // DYNAMIC_SEQRAM_6A
 	{0x3D6C, 0xAC6F}, // DYNAMIC_SEQRAM_6C
 	{0x3D6E, 0x4645}, // DYNAMIC_SEQRAM_6E
 	{0x3D70, 0x4400}, // DYNAMIC_SEQRAM_70
 	{0x3D72, 0x0513}, // DYNAMIC_SEQRAM_72
 	{0x3D74, 0x8069}, // DYNAMIC_SEQRAM_74
 	{0x3D76, 0x6AC6}, // DYNAMIC_SEQRAM_76
 	{0x3D78, 0x5F95}, // DYNAMIC_SEQRAM_78
 	{0x3D7A, 0x5F70}, // DYNAMIC_SEQRAM_7A
 	{0x3D7C, 0x8040}, // DYNAMIC_SEQRAM_7C
 	{0x3D7E, 0x4A81}, // DYNAMIC_SEQRAM_7E
 	{0x3D80, 0x0300}, // DYNAMIC_SEQRAM_80
 	{0x3D82, 0xE703}, // DYNAMIC_SEQRAM_82
 	{0x3D84, 0x0088}, // DYNAMIC_SEQRAM_84
 	{0x3D86, 0x4A83}, // DYNAMIC_SEQRAM_86
 	{0x3D88, 0x40FF}, // DYNAMIC_SEQRAM_88
 	{0x3D8A, 0xFFFF}, // DYNAMIC_SEQRAM_8A
 	{0x3D8C, 0xFD70}, // DYNAMIC_SEQRAM_8C
 	{0x3D8E, 0x8040}, // DYNAMIC_SEQRAM_8E
 	{0x3D90, 0x4A85}, // DYNAMIC_SEQRAM_90
 	{0x3D92, 0x4FA8}, // DYNAMIC_SEQRAM_92
 	{0x3D94, 0x4F8C}, // DYNAMIC_SEQRAM_94
 	{0x3D96, 0x0070}, // DYNAMIC_SEQRAM_96
 	{0x3D98, 0xBE47}, // DYNAMIC_SEQRAM_98
 	{0x3D9A, 0x8847}, // DYNAMIC_SEQRAM_9A
 	{0x3D9C, 0xBC78}, // DYNAMIC_SEQRAM_9C
 	{0x3D9E, 0x6B89}, // DYNAMIC_SEQRAM_9E
 	{0x3DA0, 0x6A80}, // DYNAMIC_SEQRAM_A0
 	{0x3DA2, 0x6986}, // DYNAMIC_SEQRAM_A2
 	{0x3DA4, 0x6B8E}, // DYNAMIC_SEQRAM_A4
 	{0x3DA6, 0x6B80}, // DYNAMIC_SEQRAM_A6
 	{0x3DA8, 0x6980}, // DYNAMIC_SEQRAM_A8
 	{0x3DAA, 0x6A88}, // DYNAMIC_SEQRAM_AA
 	{0x3DAC, 0x7C9F}, // DYNAMIC_SEQRAM_AC
 	{0x3DAE, 0x866B}, // DYNAMIC_SEQRAM_AE
 	{0x3DB0, 0x8765}, // DYNAMIC_SEQRAM_B0
 	{0x3DB2, 0x46FF}, // DYNAMIC_SEQRAM_B2
 	{0x3DB4, 0xE365}, // DYNAMIC_SEQRAM_B4
 	{0x3DB6, 0xA679}, // DYNAMIC_SEQRAM_B6
 	{0x3DB8, 0x4A40}, // DYNAMIC_SEQRAM_B8
 	{0x3DBA, 0x4580}, // DYNAMIC_SEQRAM_BA
 	{0x3DBC, 0x44BC}, // DYNAMIC_SEQRAM_BC
 	{0x3DBE, 0x7000}, // DYNAMIC_SEQRAM_BE
 	{0x3DC0, 0x8040}, // DYNAMIC_SEQRAM_C0
 	{0x3DC2, 0x0802}, // DYNAMIC_SEQRAM_C2
 	{0x3DC4, 0x10EF}, // DYNAMIC_SEQRAM_C4
 	{0x3DC6, 0x0104}, // DYNAMIC_SEQRAM_C6
 	{0x3DC8, 0x3860}, // DYNAMIC_SEQRAM_C8
 	{0x3DCA, 0x5D5D}, // DYNAMIC_SEQRAM_CA
 	{0x3DCC, 0x5682}, // DYNAMIC_SEQRAM_CC
 	{0x3DCE, 0x1300}, // DYNAMIC_SEQRAM_CE
 	{0x3DD0, 0x8648}, // DYNAMIC_SEQRAM_D0
 	{0x3DD2, 0x8202}, // DYNAMIC_SEQRAM_D2
 	{0x3DD4, 0x8082}, // DYNAMIC_SEQRAM_D4
 	{0x3DD6, 0x598A}, // DYNAMIC_SEQRAM_D6
 	{0x3DD8, 0x0280}, // DYNAMIC_SEQRAM_D8
 	{0x3DDA, 0x2048}, // DYNAMIC_SEQRAM_DA
 	{0x3DDC, 0x3060}, // DYNAMIC_SEQRAM_DC
 	{0x3DDE, 0x8042}, // DYNAMIC_SEQRAM_DE
 	{0x3DE0, 0x9259}, // DYNAMIC_SEQRAM_E0
 	{0x3DE2, 0x865A}, // DYNAMIC_SEQRAM_E2
 	{0x3DE4, 0x8258}, // DYNAMIC_SEQRAM_E4
 	{0x3DE6, 0x8562}, // DYNAMIC_SEQRAM_E6
 	{0x3DE8, 0x8062}, // DYNAMIC_SEQRAM_E8
 	{0x3DEA, 0x8560}, // DYNAMIC_SEQRAM_EA
 	{0x3DEC, 0x9257}, // DYNAMIC_SEQRAM_EC
 	{0x3DEE, 0x8221}, // DYNAMIC_SEQRAM_EE
 	{0x3DF0, 0x10FF}, // DYNAMIC_SEQRAM_F0
 	{0x3DF2, 0xB757}, // DYNAMIC_SEQRAM_F2
 	{0x3DF4, 0x9361}, // DYNAMIC_SEQRAM_F4
 	{0x3DF6, 0x1019}, // DYNAMIC_SEQRAM_F6
 	{0x3DF8, 0x8020}, // DYNAMIC_SEQRAM_F8
 	{0x3DFA, 0x9043}, // DYNAMIC_SEQRAM_FA
 	{0x3DFC, 0x8E43}, // DYNAMIC_SEQRAM_FC
 	{0x3DFE, 0x845F}, // DYNAMIC_SEQRAM_FE
 	{0x3E00, 0x835D}, // DYNAMIC_SEQRAM_100
 	{0x3E02, 0x805D}, // DYNAMIC_SEQRAM_102
 	{0x3E04, 0x8163}, // DYNAMIC_SEQRAM_104
 	{0x3E06, 0x8063}, // DYNAMIC_SEQRAM_106
 	{0x3E08, 0xA060}, // DYNAMIC_SEQRAM_108
 	{0x3E0A, 0x9157}, // DYNAMIC_SEQRAM_10A
 	{0x3E0C, 0x8260}, // DYNAMIC_SEQRAM_10C
 	{0x3E0E, 0x5CFF}, // DYNAMIC_SEQRAM_10E
 	{0x3E10, 0xFFFF}, // DYNAMIC_SEQRAM_110
 	{0x3E12, 0xFFE5}, // DYNAMIC_SEQRAM_112
 	{0x3E14, 0x1016}, // DYNAMIC_SEQRAM_114
 	{0x3E16, 0x2048}, // DYNAMIC_SEQRAM_116
 	{0x3E18, 0x0802}, // DYNAMIC_SEQRAM_118
 	{0x3E1A, 0x1C60}, // DYNAMIC_SEQRAM_11A
 	{0x3E1C, 0x0014}, // DYNAMIC_SEQRAM_11C
 	{0x3E1E, 0x0060}, // DYNAMIC_SEQRAM_11E
 	{0x3E20, 0x2205}, // DYNAMIC_SEQRAM_120
 	{0x3E22, 0x8120}, // DYNAMIC_SEQRAM_122
 	{0x3E24, 0x908F}, // DYNAMIC_SEQRAM_124
 	{0x3E26, 0x6A80}, // DYNAMIC_SEQRAM_126
 	{0x3E28, 0x6982}, // DYNAMIC_SEQRAM_128
 	{0x3E2A, 0x5F9F}, // DYNAMIC_SEQRAM_12A
 	{0x3E2C, 0x6F46}, // DYNAMIC_SEQRAM_12C
 	{0x3E2E, 0x4544}, // DYNAMIC_SEQRAM_12E
 	{0x3E30, 0x0005}, // DYNAMIC_SEQRAM_130
 	{0x3E32, 0x8013}, // DYNAMIC_SEQRAM_132
 	{0x3E34, 0x8069}, // DYNAMIC_SEQRAM_134
 	{0x3E36, 0x6A80}, // DYNAMIC_SEQRAM_136
 	{0x3E38, 0x7000}, // DYNAMIC_SEQRAM_138
 	{0x3E3A, 0x0000}, // DYNAMIC_SEQRAM_13A
 	{0x3E3C, 0x0000}, // DYNAMIC_SEQRAM_13C
 	{0x3E3E, 0x0000}, // DYNAMIC_SEQRAM_13E
 	{0x3E40, 0x0000}, // DYNAMIC_SEQRAM_140
 	{0x3E42, 0x0000}, // DYNAMIC_SEQRAM_142
 	{0x3E44, 0x0000}, // DYNAMIC_SEQRAM_144
 	{0x3E46, 0x0000}, // DYNAMIC_SEQRAM_146
 	{0x3E48, 0x0000}, // DYNAMIC_SEQRAM_148
 	{0x3E4A, 0x0000}, // DYNAMIC_SEQRAM_14A
 	{0x3E4C, 0x0000}, // DYNAMIC_SEQRAM_14C
 	{0x3E4E, 0x0000}, // DYNAMIC_SEQRAM_14E
 	{0x3E50, 0x0000}, // DYNAMIC_SEQRAM_150
 	{0x3E52, 0x0000}, // DYNAMIC_SEQRAM_152
 	{0x3E54, 0x0000}, // DYNAMIC_SEQRAM_154
 	{0x3E56, 0x0000}, // DYNAMIC_SEQRAM_156
 	{0x3E58, 0x0000}, // DYNAMIC_SEQRAM_158
 	{0x3E5A, 0x0000}, // DYNAMIC_SEQRAM_15A
 	{0x3E5C, 0x0000}, // DYNAMIC_SEQRAM_15C
 	{0x3E5E, 0x0000}, // DYNAMIC_SEQRAM_15E
 	{0x3E60, 0x0000}, // DYNAMIC_SEQRAM_160
 	{0x3E62, 0x0000}, // DYNAMIC_SEQRAM_162
 	{0x3E64, 0x0000}, // DYNAMIC_SEQRAM_164
 	{0x3E66, 0x0000}, // DYNAMIC_SEQRAM_166
 	{0x3E68, 0x0000}, // DYNAMIC_SEQRAM_168
 	{0x3E6A, 0x0000}, // DYNAMIC_SEQRAM_16A
 	{0x3E6C, 0x0000}, // DYNAMIC_SEQRAM_16C
 	{0x3E6E, 0x0000}, // DYNAMIC_SEQRAM_16E
 	{0x3E70, 0x0000}, // DYNAMIC_SEQRAM_170
 	{0x3E72, 0x0000}, // DYNAMIC_SEQRAM_172
 	{0x3E74, 0x0000}, // DYNAMIC_SEQRAM_174
 	{0x3E76, 0x0000}, // DYNAMIC_SEQRAM_176
 	{0x3E78, 0x0000}, // DYNAMIC_SEQRAM_178
 	{0x3E7A, 0x0000}, // DYNAMIC_SEQRAM_17A
 	{0x3E7C, 0x0000}, // DYNAMIC_SEQRAM_17C
 	{0x3E7E, 0x0000}, // DYNAMIC_SEQRAM_17E
 	{0x3E80, 0x0000}, // DYNAMIC_SEQRAM_180
 	{0x3E82, 0x0000}, // DYNAMIC_SEQRAM_182
 	{0x3E84, 0x0000}, // DYNAMIC_SEQRAM_184
 	{0x3E86, 0x0000}, // DYNAMIC_SEQRAM_186
 	{0x3E88, 0x0000}, // DYNAMIC_SEQRAM_188
 	{0x3E8A, 0x0000}, // DYNAMIC_SEQRAM_18A
 	{0x3E8C, 0x0000}, // DYNAMIC_SEQRAM_18C
 	{0x3E8E, 0x0000}, // DYNAMIC_SEQRAM_18E
 	{0x3E90, 0x0000}, // DYNAMIC_SEQRAM_190
 	{0x3E92, 0x0000}, // DYNAMIC_SEQRAM_192
 	{0x3E94, 0x0000}, // DYNAMIC_SEQRAM_194
 	{0x3E96, 0x0000}, // DYNAMIC_SEQRAM_196
 	{0x3E98, 0x0000}, // DYNAMIC_SEQRAM_198
 	{0x3E9A, 0x0000}, // DYNAMIC_SEQRAM_19A
 	{0x3E9C, 0x0000}, // DYNAMIC_SEQRAM_19C
 	{0x3E9E, 0x0000}, // DYNAMIC_SEQRAM_19E
 	{0x3EA0, 0x0000}, // DYNAMIC_SEQRAM_1A0
 	{0x3EA2, 0x0000}, // DYNAMIC_SEQRAM_1A2
 	{0x3EA4, 0x0000}, // DYNAMIC_SEQRAM_1A4
 	{0x3EA6, 0x0000}, // DYNAMIC_SEQRAM_1A6
 	{0x3EA8, 0x0000}, // DYNAMIC_SEQRAM_1A8
 	{0x3EAA, 0x0000}, // DYNAMIC_SEQRAM_1AA
 	{0x3EAC, 0x0000}, // DYNAMIC_SEQRAM_1AC
 	{0x3EAE, 0x0000}, // DYNAMIC_SEQRAM_1AE
 	{0x3EB0, 0x0000}, // DYNAMIC_SEQRAM_1B0
 	{0x3EB2, 0x0000}, // DYNAMIC_SEQRAM_1B2
 	{0x3EB4, 0x0000}, // DYNAMIC_SEQRAM_1B4
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3EBA, 0xAAAA}, // DAC_LD_4_5
 	{0x3EBC, 0x0086}, // DAC_LD_6_7
 	{0x3EC0, 0x1E00}, // DAC_LD_10_11
 	{0x3EC2, 0x000B}, // DAC_LD_12_13
 	{0x3EC4, 0x3300}, // DAC_LD_14_15
 	{0x3EC6, 0xEA44}, // DAC_LD_16_17
 	{0x3EC8, 0x6F6F}, // DAC_LD_18_19
 	{0x3ECA, 0x2F4A}, // DAC_LD_20_21
 	{0x3ECC, 0x0506}, // DAC_LD_22_23
 	{0x3ECE, 0x203B}, // DAC_LD_24_25
 	{0x3ED0, 0x13F0}, // DAC_LD_26_27
 	{0x3ED2, 0x9A3D}, // DAC_LD_28_29
 	{0x3ED4, 0x862F}, // DAC_LD_30_31
 	{0x3ED6, 0x4081}, // DAC_LD_32_33
 	{0x3ED8, 0x4003}, // DAC_LD_34_35
 	{0x3EDA, 0x9A80}, // DAC_LD_36_37
 	{0x3EDC, 0xC000}, // DAC_LD_38_39
 	{0x3EDE, 0xC103}, // DAC_LD_40_41
 	{0x3426, 0x1600}, // AD_RESERVE_1_0
 	{0x342A, 0x0038}, // PULSE_CONFIG
 	{0x3F3E, 0x0001}, // ANALOG_CONTROL10
 	{0x341A, 0x6051}, // AD_SH1_0
 	{0x3420, 0x6051}, // AD_SH2_0
 	{0x3EC2, 0x000A}, // DAC_LD_12_13
 	{0x3ED8, 0x8003}, // DAC_LD_34_35
 	{0x341A, 0x4735}, // AD_SH1_0
 	{0x3420, 0x4735}, // AD_SH2_0
 	{0x3426, 0x8A1A}, // AD_RESERVE_1_0
 	{0x342A, 0x0018}, // PULSE_CONFIG
 	{0x3ED2, 0xA53D}, // DAC_LD_28_29
 	{0x3EDA, 0xA580}, // DAC_LD_36_37
 	{0x3EBA, 0xAAAD}, // DAC_LD_4_5
 	{0x3EB6, 0x004C}, // DAC_LD_0_1
 	{0x3F3E, 0x0000}, // ANALOG_CONTROL10
 	{0x31B0, 0x0058}, // FRAME_PREAMBLE
 	{0x31B2, 0x002C}, // LINE_PREAMBLE
 	{0x31B4, 0x23D2}, // MIPI_TIMING_0
 	{0x31B6, 0x13E9}, // MIPI_TIMING_1
 	{0x31B8, 0x2413}, // MIPI_TIMING_2
 	{0x31BA, 0x1C68}, // MIPI_TIMING_3
 	{0x31BC, 0x860B}, // MIPI_TIMING_4
 	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
 	{0x0304, 0x0303}, // PRE_PLL_CLK_DIV
 	{0x0306, 0x3A59}, // PLL_MULTIPLIER
// 	{0x0306, 0x7359}, // PLL_MULTIPLIER
 	{0x0302, 0x0001}, // VT_SYS_CLK_DIV
 	{0x030A, 0x0001}, // OP_SYS_CLK_DIV
 	{0x0300, 0x0005}, // VT_PIX_CLK_DIV
 	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
 	{0x3016, 0x0101}, // ROW_SPEED
 	{0x3004, 0x0004}, // X_ADDR_START_
 	{0x3008, 0x0A2B}, // X_ADDR_END_
 	{0x3002, 0x0004}, // Y_ADDR_START_
 	{0x3006, 0x07A3}, // Y_ADDR_END_
 	{0x3040, 0x0041}, // READ_MODE
 	{0x317A, 0x416E}, // ANALOG_CONTROL6
 	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
 	{0x034C, 0x0A28}, // X_OUTPUT_SIZE
 	{0x034E, 0x07A0}, // Y_OUTPUT_SIZE
 	{0x300C, 0x1178}, // LINE_LENGTH_PCK_
 	{0x300A, 0x092A}, // FRAME_LENGTH_LINES_
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00A8}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x30EE, 0x1136}, // DARK_CONTROL3
 	{0x3F2C, 0x442E}, // GTH_THRES_RTN
 	{0x301A, 0x0210}, // RESET_REGISTER
 	{0x301E, 0x00AA}, // DATA_PEDESTAL_
 	{0x301A, 0x0218}, // RESET_REGISTER
 	{0x3120, 0x0005}, // DITHER_CONTROL
 	{0x300C, 0x0BE0}, // LINE_LENGTH_PCK_
 	{0x300A, 0x08EE}, // FRAME_LENGTH_LINES_
 	{0x3012, 0x08DC}, // COARSE_INTEGRATION_TIME_
 	// {0x301A, 0x021C}, // RESET_REGISTER
 	{AR0521_TABLE_END, 0x0000}
}; */


enum {
	AR0521_MODE_2592X1944,
	AR0521_MODE_1920X1080,
	//AR0521_MODE_2600X1952_30FPS,

	AR0521_MODE_START_STREAM,
	AR0521_MODE_STOP_STREAM,
	AR0521_MODE_TEST_PATTERN
};

static const ar0521_reg *mode_table[] = {
	[AR0521_MODE_2592X1944]			= mode_2592x1944,
	[AR0521_MODE_1920X1080]			= mode_1920x1080,
	//[AR0521_MODE_2600X1952_30FPS]    = mode_2600x1952_30fps,

	[AR0521_MODE_START_STREAM]		= ar0521_start,
	[AR0521_MODE_STOP_STREAM]		= ar0521_stop,
	[AR0521_MODE_TEST_PATTERN]		= tp_colorbars,
};

static const int ar0521_15fps[] = {
	15,
};

static const int ar0521_24fps[] = {
	24,
};

static const int ar0521_30fps[] = {
	30,
};

static const int ar0521_60fps[] = {
	61,
};

static const int ar0521_120fps[] = {
	120,
};

struct camera_common_frmfmt ar0521_frmfmt[] = {
	{{2592, 1944},	ar0521_30fps,	1, 0,	AR0521_MODE_2592X1944},
	{{1920, 1080},	ar0521_30fps,	1, 0,	AR0521_MODE_1920X1080},
	//{{2600, 1952},	ar0521_30fps,	1, 0,	AR0521_MODE_2600X1952_30FPS},
};
#endif  /* __AR0521_TABLES__ */

